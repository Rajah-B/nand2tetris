// bootstrap 
@256
D=A
@0
M=D
// call Sys.init 0
@bootstrap.return-address.0
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=A
@0
D=M-D
@5
D=D-A
@2
M=D
@0
D=M
@1
M=D
@Sys.init
0;JMP
(bootstrap.return-address.0)
// function Class1.set 0
(Class1.set)
// push argument 0
@0
D=A
@2
A=D+M
D=M
@0
A=M
M=D
@0
M=M+1
// pop static 0
@0
AM=M-1
D=M
@Class1.0
M=D
// push argument 1
@1
D=A
@2
A=D+M
D=M
@0
A=M
M=D
@0
M=M+1
// pop static 1
@0
AM=M-1
D=M
@Class1.1
M=D
// push constant 0
@0
D=A
@0
A=M
M=D
@0
M=M+1
// return 
@5
D=A
@1
D=M-D
A=D
D=M
@15
M=D
@0
AM=M-1
D=M
@2
A=M
M=D
@2
D=M+1
@0
M=D
@1
D=A
@1
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@1
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@1
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@1
D=M-D
A=D
D=M
@1
M=D
@15
A=M
0;JMP
// function Class1.get 0
(Class1.get)
// push static 0
@Class1.0
D=M
@0
A=M
M=D
@0
M=M+1
// push static 1
@Class1.1
D=M
@0
A=M
M=D
@0
M=M+1
// sub
@0
AM=M-1
D=M
@0
A=M-1
M=M-D
// return 
@5
D=A
@1
D=M-D
A=D
D=M
@15
M=D
@0
AM=M-1
D=M
@2
A=M
M=D
@2
D=M+1
@0
M=D
@1
D=A
@1
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@1
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@1
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@1
D=M-D
A=D
D=M
@1
M=D
@15
A=M
0;JMP
// function Class2.set 0
(Class2.set)
// push argument 0
@0
D=A
@2
A=D+M
D=M
@0
A=M
M=D
@0
M=M+1
// pop static 0
@0
AM=M-1
D=M
@Class2.0
M=D
// push argument 1
@1
D=A
@2
A=D+M
D=M
@0
A=M
M=D
@0
M=M+1
// pop static 1
@0
AM=M-1
D=M
@Class2.1
M=D
// push constant 0
@0
D=A
@0
A=M
M=D
@0
M=M+1
// return 
@5
D=A
@1
D=M-D
A=D
D=M
@15
M=D
@0
AM=M-1
D=M
@2
A=M
M=D
@2
D=M+1
@0
M=D
@1
D=A
@1
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@1
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@1
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@1
D=M-D
A=D
D=M
@1
M=D
@15
A=M
0;JMP
// function Class2.get 0
(Class2.get)
// push static 0
@Class2.0
D=M
@0
A=M
M=D
@0
M=M+1
// push static 1
@Class2.1
D=M
@0
A=M
M=D
@0
M=M+1
// sub
@0
AM=M-1
D=M
@0
A=M-1
M=M-D
// return 
@5
D=A
@1
D=M-D
A=D
D=M
@15
M=D
@0
AM=M-1
D=M
@2
A=M
M=D
@2
D=M+1
@0
M=D
@1
D=A
@1
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@1
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@1
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@1
D=M-D
A=D
D=M
@1
M=D
@15
A=M
0;JMP
// function Sys.init 0
(Sys.init)
// push constant 6
@6
D=A
@0
A=M
M=D
@0
M=M+1
// push constant 8
@8
D=A
@0
A=M
M=D
@0
M=M+1
// call Class1.set 2
@Sys.init.return-address.1
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=A
@0
D=M-D
@5
D=D-A
@2
M=D
@0
D=M
@1
M=D
@Class1.set
0;JMP
(Sys.init.return-address.1)
// pop temp 0
@0
D=A
@5
D=D+A
@15
M=D
@0
AM=M-1
D=M
@15
A=M
M=D
// push constant 23
@23
D=A
@0
A=M
M=D
@0
M=M+1
// push constant 15
@15
D=A
@0
A=M
M=D
@0
M=M+1
// call Class2.set 2
@Sys.init.return-address.2
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=A
@0
D=M-D
@5
D=D-A
@2
M=D
@0
D=M
@1
M=D
@Class2.set
0;JMP
(Sys.init.return-address.2)
// pop temp 0
@0
D=A
@5
D=D+A
@15
M=D
@0
AM=M-1
D=M
@15
A=M
M=D
// call Class1.get 0
@Sys.init.return-address.3
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=A
@0
D=M-D
@5
D=D-A
@2
M=D
@0
D=M
@1
M=D
@Class1.get
0;JMP
(Sys.init.return-address.3)
// call Class2.get 0
@Sys.init.return-address.4
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=A
@0
D=M-D
@5
D=D-A
@2
M=D
@0
D=M
@1
M=D
@Class2.get
0;JMP
(Sys.init.return-address.4)
// label WHILE
(Sys.init$WHILE)
// goto WHILE
@Sys.init$WHILE
0;JMP
